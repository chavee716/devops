pipeline {
    agent any
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKERHUB_USERNAME = "${DOCKERHUB_CREDENTIALS_USR}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Create DockerHub Repositories') {
            steps {
                script {
                    // Authenticate with DockerHub
                    def token = sh(
                        script: '''
                            curl -s -X POST "https://hub.docker.com/v2/users/login/" \
                            -H "Content-Type: application/json" \
                            -d '{"username": "'"$DOCKERHUB_USERNAME"'", "password": "'"$DOCKERHUB_CREDENTIALS_PSW"'"}' | jq -r .token
                        ''',
                        returnStdout: true
                    ).trim()
                    
                    // Create Auth Service Repository
                    sh """
                        curl -X POST "https://hub.docker.com/v2/repositories/${DOCKERHUB_USERNAME}/auth-service/" \
                             -H "Authorization: JWT ${token}" \
                             -H "Content-Type: application/json" \
                             -d '{"namespace": "${DOCKERHUB_USERNAME}", "name": "auth-service", "is_private": false}' || true
                        
                        curl -X POST "https://hub.docker.com/v2/repositories/${DOCKERHUB_USERNAME}/frontend/" \
                             -H "Authorization: JWT ${token}" \
                             -H "Content-Type: application/json" \
                             -d '{"namespace": "${DOCKERHUB_USERNAME}", "name": "frontend", "is_private": false}' || true
                    """
                }
            }
        }
        
        stage('Build and Push Auth Service') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        def authServiceImage = docker.build("${DOCKERHUB_USERNAME}/auth-service", "./auth-service")
                        
                        // Push with latest tag
                        authServiceImage.push('latest')
                        
                        // Push with commit SHA tag
                        authServiceImage.push("${env.GIT_COMMIT}")
                    }
                }
            }
        }
        
        stage('Build and Push Frontend') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        def frontendImage = docker.build("${DOCKERHUB_USERNAME}/frontend", "./frontend")
                        
                        // Push with latest tag
                        frontendImage.push('latest')
                        
                        // Push with commit SHA tag
                        frontendImage.push("${env.GIT_COMMIT}")
                    }
                }
            }
        }
    }
}